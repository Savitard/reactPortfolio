{"version":3,"file":"static/js/34.7e268437.chunk.js","mappings":"qPAiBA,MAAMA,EAAS,CACbC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,IAEfC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTJ,aAAc,GACdK,MAAO,KAETC,UAAW,CACTC,OAAQ,GACRF,MAAO,IACPG,OAAQ,GACRR,aAAc,IAEhBS,YAAa,CACXC,cAAe,QAEjBC,QAAS,CACPC,SAAU,MAwGd,QApGA,SAAoBC,GAClB,MAAMC,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,KACnB,OAAEC,GAAWJ,GACZK,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,MAoBjC,OATAC,EAAAA,EAAAA,YAAU,KACRC,MAAMC,EAAAA,EAAUC,YAAa,CAC3BC,OAAQ,QAEPC,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,GAAQR,EAAQQ,EAAIH,eAC1BK,OAAOC,GAAQA,GAAI,GACrB,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,QAAM,CAACC,MAAOnB,IAEdC,GAEGgB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4BAA2BJ,UACxCC,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CAAAL,UACRC,EAAAA,EAAAA,KAACK,EAAAA,SAAQ,CACPC,UAAW1B,EAAM2B,kBAAkBR,SAElCf,EAAKwB,KAAI,CAACC,EAAMC,KACfb,EAAAA,EAAAA,MAACc,EAAAA,aAAY,CAEXC,SAAUH,EAAKG,SACfC,eAAgB,CAAEC,WAAYlC,EAAMmC,aACpCC,MAAOxD,EAAOU,UACd+C,mBAAoB,CAAEC,MAAOtC,EAAMsC,OAAQnB,SAAA,EAE3CC,EAAAA,EAAAA,KAAA,MACEG,UAAU,aAEZJ,SAEGU,EAAKP,SAGRL,EAAAA,EAAAA,MAAA,OAAKmB,MAAOxD,EAAOI,uBAAuBmC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,MAAIgB,MAAO,IAAKxD,EAAOO,cAAemD,MAAOtC,EAAMmC,aAAchB,SAC9DU,EAAKU,WAEPV,EAAKW,WACJvB,EAAAA,EAAAA,MAAA,MAAImB,MAAOxD,EAAOS,YAAY8B,SAAA,CAAC,WAE5B,IACAU,EAAKW,gBAIZpB,EAAAA,EAAAA,KAAA,MAAIgB,MAAOxD,EAAOC,QAAQsC,SACvBU,EAAKY,gBAAgBb,KAAKc,IACzBzB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACuB,EAAAA,EAAa,CACZxB,SAAUuB,EACVE,WAAY,CACVC,EAAG,aAITzB,EAAAA,EAAAA,KAAA,WATQsB,QAadzB,EAAAA,EAAAA,MAAA,MAAImB,MAAOxD,EAAOC,QAAQsC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,UAAQ0B,KAAK,SAASC,GAAE,QAAAC,OAAUlB,GAAQX,SAAC,wBAC3CC,EAAAA,EAAAA,KAAC6B,EAAAA,GAAO,CAACC,aAAY,SAAAF,OAAWlB,GAASqB,MAAM,QAAQC,aAAa,EAAOC,UAAW,IAAKjB,MAAOxD,EAAOiB,QAASyD,KAAMzB,EAAK0B,aAEhH,OAAd1B,EAAK2B,MACJpC,EAAAA,EAAAA,KAAA,KAAGoC,KAAM3B,EAAK2B,KAAKrC,UAACC,EAAAA,EAAAA,KAAA,OAAKqC,IAAK5B,EAAK6B,KAAMC,IAAI,OAAOvB,MAAOxD,EAAOY,eAElE4B,EAAAA,EAAAA,KAAA,OAAKqC,IAAK5B,EAAK6B,KAAMC,IAAI,OAAOvB,MAAOxD,EAAOY,cAhD3CqC,EAAKP,MAAQO,EAAKG,mBAuD/BZ,EAAAA,EAAAA,KAACwC,EAAAA,QAAe,MAG5B,C,4ECnIA,QATA,SAAgB7D,GACd,MAAM,MAAEuB,GAAUvB,EAClB,OAAOqB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQJ,SAAEG,GAClC,C","sources":["components/Experience.jsx","components/Header.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\r\nimport { Container } from 'react-bootstrap';\r\n// import Typography from '@mui/material/Typography';\r\n// import Dialog from '@mui/material/Dialog';\r\n// import DialogTitle from '@mui/material/DialogTitle';\r\n// import DialogContent from '@mui/material/DialogContent';\r\n// import DialogActions from '@mui/material/DialogActions';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { Tooltip } from 'react-tooltip';\r\nimport Header from './Header';\r\nimport endpoints from '../constants/endpoints';\r\nimport FallbackSpinner from './FallbackSpinner';\r\nimport '../css/experience.css';\r\n\r\nconst styles = {\r\n  ulStyle: {\r\n    listStylePosition: 'outside',\r\n    paddingLeft: 20,\r\n  },\r\n  subtitleContainerStyle: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  subtitleStyle: {\r\n    display: 'inline-block',\r\n  },\r\n  inlineChild: {\r\n    display: 'inline-block',\r\n  },\r\n  itemStyle: {\r\n    marginBottom: 10,\r\n    width: 600,\r\n  },\r\n  iconStyle: {\r\n    height: 75,\r\n    width: 200,\r\n    margin: 10,\r\n    marginBottom: 50,\r\n  },\r\n  noClicStyle: {\r\n    pointerEvents: 'none',\r\n  },\r\n  tooltip: {\r\n    maxWidth: 400,\r\n  },\r\n};\r\n\r\nfunction Experience(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const { header } = props;\r\n  const [data, setData] = useState(null);\r\n  // const [open, setOpen] = useState(false);\r\n\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    fetch(endpoints.experiences, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res.experiences))\r\n      .catch((err) => err);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n\r\n      {data\r\n        ? (\r\n          <div className=\"section-content-container\">\r\n            <Container>\r\n              <Timeline\r\n                lineColor={theme.timelineLineColor}\r\n              >\r\n                {data.map((item, index) => (\r\n                  <TimelineItem\r\n                    key={item.title + item.dateText}\r\n                    dateText={item.dateText}\r\n                    dateInnerStyle={{ background: theme.accentColor }}\r\n                    style={styles.itemStyle}\r\n                    bodyContainerStyle={{ color: theme.color }}\r\n                  >\r\n                    <h2\r\n                      className=\"item-title\"\r\n                    // onMouseEnter={handleOpen}\r\n                    // onMouseLeave={handleClose}\r\n                    >\r\n                      {item.title}\r\n\r\n                    </h2>\r\n                    <div style={styles.subtitleContainerStyle}>\r\n                      <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\r\n                        {item.subtitle}\r\n                      </h4>\r\n                      {item.workType && (\r\n                        <h5 style={styles.inlineChild}>\r\n                          &nbsp;·\r\n                          {' '}\r\n                          {item.workType}\r\n                        </h5>\r\n                      )}\r\n                    </div>\r\n                    <ul style={styles.ulStyle}>\r\n                      {item.workDescription.map((point) => (\r\n                        <div key={point}>\r\n                          <li>\r\n                            <ReactMarkdown\r\n                              children={point}\r\n                              components={{\r\n                                p: 'span',\r\n                              }}\r\n                            />\r\n                          </li>\r\n                          <br />\r\n                        </div>\r\n                      ))}\r\n                    </ul>\r\n                    <ul style={styles.ulStyle}>\r\n                      <button type=\"button\" id={`popup${index}`}>Plus de détails</button>\r\n                      <Tooltip anchorSelect={`#popup${index}`} place=\"right\" animateFill={false} delayShow={200} style={styles.tooltip} html={item.details} />\r\n                    </ul>\r\n                    {item.href !== null ? (\r\n                      <a href={item.href}><img src={item.logo} alt=\"logo\" style={styles.iconStyle} /></a>\r\n                    ) : (\r\n                      <img src={item.logo} alt=\"logo\" style={styles.iconStyle} />\r\n                    )}\r\n                  </TimelineItem>\r\n                ))}\r\n              </Timeline>\r\n            </Container>\r\n          </div>\r\n        ) : <FallbackSpinner />}\r\n    </>\r\n  );\r\n}\r\n\r\nExperience.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Experience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <div className=\"header\">{title}</div>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n"],"names":["styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","width","iconStyle","height","margin","noClicStyle","pointerEvents","tooltip","maxWidth","props","theme","useContext","ThemeContext","header","data","setData","useState","useEffect","fetch","endpoints","experiences","method","then","res","json","catch","err","_jsxs","_Fragment","children","_jsx","Header","title","className","Container","Timeline","lineColor","timelineLineColor","map","item","index","TimelineItem","dateText","dateInnerStyle","background","accentColor","style","bodyContainerStyle","color","subtitle","workType","workDescription","point","ReactMarkdown","components","p","type","id","concat","Tooltip","anchorSelect","place","animateFill","delayShow","html","details","href","src","logo","alt","FallbackSpinner"],"sourceRoot":""}