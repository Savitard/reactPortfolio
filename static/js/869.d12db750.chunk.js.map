{"version":3,"file":"static/js/869.d12db750.chunk.js","mappings":"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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/mdurl/encode.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/react-markdown/node_modules/vfile-message/lib/index.js","../node_modules/react-markdown/node_modules/vfile/lib/minpath.browser.js","../node_modules/react-markdown/node_modules/vfile/lib/minproc.browser.js","../node_modules/react-markdown/node_modules/vfile/lib/minurl.shared.js","../node_modules/react-markdown/node_modules/vfile/lib/minurl.browser.js","../node_modules/react-markdown/node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/node_modules/vfile-message/lib/index.js","../node_modules/unified/node_modules/vfile/lib/minpath.browser.js","../node_modules/unified/node_modules/vfile/lib/minproc.browser.js","../node_modules/unified/node_modules/vfile/lib/minurl.shared.js","../node_modules/unified/node_modules/vfile/lib/minurl.browser.js","../node_modules/unified/node_modules/vfile/lib/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/lib/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/mdast-util-to-hast/node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/space-separated-tokens/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=60103,c=60106,d=60107,e=60108,f=60114,g=60109,h=60110,k=60112,l=60113,m=60120,n=60115,p=60116,q=60121,r=60122,u=60117,v=60129,w=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var x=Symbol.for;b=x(\"react.element\");c=x(\"react.portal\");d=x(\"react.fragment\");e=x(\"react.strict_mode\");f=x(\"react.profiler\");g=x(\"react.provider\");h=x(\"react.context\");k=x(\"react.forward_ref\");l=x(\"react.suspense\");m=x(\"react.suspense_list\");n=x(\"react.memo\");p=x(\"react.lazy\");q=x(\"react.block\");r=x(\"react.server.block\");u=x(\"react.fundamental\");v=x(\"react.debug_trace_mode\");w=x(\"react.legacy_hidden\")}\nfunction y(a){if(\"object\"===typeof a&&null!==a){var t=a.$$typeof;switch(t){case b:switch(a=a.type,a){case d:case f:case e:case l:case m:return a;default:switch(a=a&&a.$$typeof,a){case h:case k:case p:case n:case g:return a;default:return t}}case c:return t}}}var z=g,A=b,B=k,C=d,D=p,E=n,F=c,G=f,H=e,I=l;exports.ContextConsumer=h;exports.ContextProvider=z;exports.Element=A;exports.ForwardRef=B;exports.Fragment=C;exports.Lazy=D;exports.Memo=E;exports.Portal=F;exports.Profiler=G;exports.StrictMode=H;\nexports.Suspense=I;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return y(a)===h};exports.isContextProvider=function(a){return y(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return y(a)===k};exports.isFragment=function(a){return y(a)===d};exports.isLazy=function(a){return y(a)===p};exports.isMemo=function(a){return y(a)===n};\nexports.isPortal=function(a){return y(a)===c};exports.isProfiler=function(a){return y(a)===f};exports.isStrictMode=function(a){return y(a)===e};exports.isSuspense=function(a){return y(a)===l};exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===v||a===e||a===l||a===m||a===w||\"object\"===typeof a&&null!==a&&(a.$$typeof===p||a.$$typeof===n||a.$$typeof===g||a.$$typeof===h||a.$$typeof===k||a.$$typeof===u||a.$$typeof===q||a[0]===r)?!0:!1};\nexports.typeOf=y;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) /* eslint-disable no-bitwise */ ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 /* eslint-enable no-bitwise */ ||\n    // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n */\n\n/**\n * @typedef {Array<Node> | string} ChildrenOrValue\n *   List to use as `children` or value to use as `value`.\n *\n * @typedef {Record<string, unknown>} Props\n *   Other fields to add to the node.\n */\n\n/**\n * Build a node.\n *\n * @param type\n *   Node type.\n * @param props\n *   Fields assigned to node.\n * @param value\n *   Children of node or value of `node` (cast to string).\n * @returns\n *   Built node.\n */\nexport const u =\n  /**\n   * @type {(\n   *   (<T extends string>(type: T) => {type: T}) &\n   *   (<T extends string, P extends Props>(type: T, props: P) => {type: T} & P) &\n   *   (<T extends string>(type: T, value: string) => {type: T, value: string}) &\n   *   (<T extends string, P extends Props>(type: T, props: P, value: string) => {type: T, value: string} & P) &\n   *   (<T extends string, C extends Array<Node>>(type: T, children: C) => {type: T, children: C}) &\n   *   (<T extends string, P extends Props, C extends Array<Node>>(type: T, props: P, children: C) => {type: T, children: C} & P)\n   * )}\n   */\n  (\n    /**\n     * @param {string} type\n     * @param {Props | ChildrenOrValue | null | undefined} [props]\n     * @param {ChildrenOrValue | null | undefined} [value]\n     * @returns {Node}\n     */\n    function (type, props, value) {\n      /** @type {Node} */\n      const node = {type: String(type)}\n\n      if (\n        (value === undefined || value === null) &&\n        (typeof props === 'string' || Array.isArray(props))\n      ) {\n        value = props\n      } else {\n        Object.assign(node, props)\n      }\n\n      if (Array.isArray(value)) {\n        // @ts-expect-error: create a parent.\n        node.children = value\n      } else if (value !== undefined && value !== null) {\n        // @ts-expect-error: create a literal.\n        node.value = String(value)\n      }\n\n      return node\n    }\n  )\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array.<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array.<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array.<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array.<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const footnoteOrder = h.footnoteOrder\n  const identifier = String(node.identifier)\n  const index = footnoteOrder.indexOf(identifier)\n  const marker = String(\n    index === -1 ? footnoteOrder.push(identifier) : index + 1\n  )\n\n  return h(\n    node,\n    'a',\n    {\n      href: '#fn' + marker,\n      className: ['footnote-ref'],\n      id: 'fnref' + marker,\n      role: 'doc-noteref'\n    },\n    [h(node.position, 'sup', [u('text', marker)])]\n  )\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array.<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array.<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array.<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    let pos = node.align ? align.length : row.length\n    /** @type {Array.<Content>} */\n    const out = []\n\n    while (pos--) {\n      const cell = row[pos]\n      out[pos] = h(cell, name, {align: align[pos]}, cell ? all(h, cell) : [])\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(\n    node,\n    u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1'))\n  )\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array.<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Object.<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array.<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Object.<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array.<string>} footnoteOrder Order in which footnotes occur\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array.<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false] Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {Handlers} [handlers] Object mapping mdast nodes to functions handling them\n * @property {Array.<string>} [passThrough] List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler] Handler for all unknown nodes.\n *\n * @typedef {Record.<string, Handler>} Handlers Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Object.<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array.<string>} */\n  h.footnoteOrder = []\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\n\nimport {thematicBreak} from './handlers/thematic-break.js'\nimport {list} from './handlers/list.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let index = -1\n  /** @type {Array.<ListItem>} */\n  const listItems = []\n\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const marker = String(index + 1)\n    const content = [...def.children]\n    /** @type {Link} */\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {hProperties: {className: ['footnote-back'], role: 'doc-backlink'}},\n      children: [{type: 'text', value: '↩'}]\n    }\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference)\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference)\n    }\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn' + marker, role: 'doc-endnote'}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'section',\n    {className: ['footnotes'], role: 'doc-endnotes'},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new hast tree\n * (bridge-mode).\n * Without destination, returns the hast tree: further plugins run on that tree\n * (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the nlcst tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned for `toHast`.\n  return (node) => toHast(node, options)\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [plugins=[]] **deprecated**: use `remarkPlugins` instead\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    // TODO: deprecate `plugins` in v8.0.0.\n    .use(options.remarkPlugins || options.plugins || [])\n    .use(remarkRehype, {allowDangerousHtml: true})\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","encodeCache","encode","string","exclude","keepEscaped","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","toUpperCase","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","b","d","e","f","g","h","k","n","p","q","r","u","v","w","Symbol","for","x","y","a","t","$$typeof","z","A","B","C","D","E","F","G","H","I","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","parse","require","iterator","output","hasIterator","len","tokens","input","index","indexOf","token","stringify","values","settings","concat","_toConsumableArray","join","padRight","padLeft","Schema","_createClass","normal","space","_classCallCheck","merge","definitions","assign","own","create","definition","properties","info","DefinedInfo","transform","attributes","mustUseProperty","includes","normalize","attribute","xlink","_","toLowerCase","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","number","ariaColIndex","ariaColSpan","ariaControls","spaceSeparated","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","commaSeparated","acceptCharset","accessKey","action","allow","allowFullScreen","boolean","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","overloadedBoolean","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","commaOrSpaceSeparated","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","valid","dash","cap","find","schema","Type","Info","rest","camelcase","dashes","kebab","$0","checks","keys","types","_Info","_inherits","_super","_createSuper","_this","mark","_assertThisInitialized","check","defined","powers","increment","Math","pow","_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","bind","apply","instance","Function","setPrototypeOf","_wrapNativeSuper","_cache","Map","undefined","fn","has","get","set","Wrapper","getPrototypeOf","stringifyPosition","point","VFileMessage","_Error","place","parts","message","stack","fatal","ruleId","file","actual","expected","url","note","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","_len","segments","_key","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","proc","cwd","isUrl","fileUrlOrPath","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","bufferLike","buffer","messages","history","stored","map","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","toStringTag","trough","fns","pipeline","run","middlewareIndex","callback","pop","next","_len2","_key2","middleware","called","wrapped","_len3","parameters","_key3","fnExpectsCallback","done","Promise","then","_len4","_key4","use","middelware","unified","base","frozen","transformers","attachers","namespace","freezeIndex","processor","assertUnfrozen","Parser","Compiler","freeze","_attachers$freezeInde","attacher","transformer","Number","POSITIVE_INFINITY","addPlugin","addList","addPreset","add","_value","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","all","children","splice","remove","items","chunkStart","unshift","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","factorySpace","effects","ok","limit","enter","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","after","partial","subtokenize","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","head","shift","sliceChunks","_point","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","element","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","_document","_defineProperty","_flowInitial","_flow","_string","_text","resolveText","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$1","$2","hex","fromMarkdown","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","depth","referenceType","ancestor","decodeString","fragment","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","lastIndex","ceil","preprocess","combined","_combined$key","_combined$key2","remarkParse","props","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","_checks$index","visitParents","visitor","reverse","factory","parents","visit","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","_objectSpread","nodes","loose","footnoteReference","footnoteOrder","revert","subtype","suffix","contents","listItemLoose","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","child","root","table","row","out","cell","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","hName","hProperties","hChildren","ctx","generated","toHast","foot","listItems","backReference","footer","bridge","mutate","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","_parent$children","unwrapDisallowed","protocols","thing","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","parentSchema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","commas","spaces","_unused","styleReplacer","parseStyle","changelog","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","remarkRehype","rehypePlugins","hastNode","defaultProps","uri","first","colon","propTypes","PropTypes","split"],"sourceRoot":""}