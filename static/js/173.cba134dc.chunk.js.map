{"version":3,"file":"static/js/173.cba134dc.chunk.js","mappings":"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EAAMy2B,GAC/Bz2B,EAAKuF,mBAAqB,IAAKvF,EAAKuF,sBAAuBkxB,EAC/D,GCzKEC,GAAqB,OACrBC,GAAkB,sBAClBC,GAAwB,6DACxBC,GAAiC,CACnC,6CACA,6CACA,uDACA,kCACA,kCACA,yCACA,yCACA,iCACA,0BACA,2BACA,0BACA,gCACA,0BACA,wBACA,8BACA,8BACA,8BACA,8BACA,qCACA,qCACA,qCACA,qCACA,6BACA,sBACA,2CACA,wDACA,iDACA,mDACA,wDACA,iDACA,mDACA,sCACA,6CACA,6CACA,sDACA,8DACA,8CACA,iFACA,wEACA,uCACA,gDACA,uDACA,kCACA,+BACA,+BACA,yBACA,gCACA,kCACA,sCACA,2CACA,yCACA,wBACA,4BACA,sCACA,mCAEEC,GAA8C,IAC7CD,GACH,mCACA,wCAEEE,GAAyB,IAAI/5B,IAAI,CACnC,uCACA,qCACA,SAEEg6B,GAAoC,CAAC,mCAAoC,wCACzEC,GAAmD,IAClDD,GACH,mCACA,wCAGJ,SAASE,GAAUxvB,EAAUyvB,GACzB,OAAOA,EAASC,MAAMhyB,GAAWsC,EAAS8C,WAAWpF,IACzD,CC/EA,MAAMiyB,GAAa,CACfC,UAAW,YACXC,gBAAiB,yBAGfC,GAAsB,gBACtBC,GAA+B,gBAC/BC,GAA2B,IAAI36B,IAAI,CACrC,gBACA,gBACA,gBACA,cACA,WACA,gBACA,kBACA,WACA,cACA,WACA,oBACA,gBACA,eACA,mBACA,YACA,aACA,WACA,eACA,oBACA,eACA,cACA,cACA,mBACA,YACA,aACA,aACA,sBACA,mBACA,eACA,YACA,YACA,YACA,gBACA,sBACA,iBACA,OACA,OACA,cACA,YACA,qBACA,mBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,eACA,iBACA,cACA,UACA,UACA,aACA,UACA,aACA,mBACA,mBACA,cACFD,KAAKy4B,GAAS,CAACA,EAAK31B,cAAe21B,MAC/BoC,GAA2B,IAAI56B,IAAI,CACrC,CAAC,gBAAiB,CAAEqI,OAAQ,QAASlI,KAAM,UAAW2K,UAAWmJ,GAAGoI,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","sources":["../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/create-h.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hastscript/lib/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/zwitch/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/parse5/dist/common/unicode.js","../node_modules/parse5/dist/common/error-codes.js","../node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/parse5/dist/common/token.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","../node_modules/parse5/dist/common/html.js","../node_modules/parse5/dist/tokenizer/index.js","../node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/parse5/dist/tree-adapters/default.js","../node_modules/parse5/dist/common/doctype.js","../node_modules/parse5/dist/common/foreign-content.js","../node_modules/parse5/dist/parser/index.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","../node_modules/parse5/dist/serializer/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/hast-util-raw/node_modules/unist-util-is/lib/index.js","../node_modules/hast-util-raw/node_modules/unist-util-visit-parents/lib/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/hast-util-raw/node_modules/unist-util-visit/lib/index.js","../node_modules/rehype-raw/lib/index.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n *\n *   Returns `undefined` when given out of bounds input.\n *\n *   Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n *   [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {UnistPoint | undefined}\n *   Point, if `offset` is valid and in-bounds input.\n *\n * @callback ToOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n * @param {PointLike | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number | undefined}\n *   Offset (`number`) or `undefined` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n * @property {ToOffset} toOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n */\n\nconst search = /\\r?\\n|\\r/g\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  search.lastIndex = 0\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map",null,null,null,null,"/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map",null,"import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {Array<Nodes['type']> | null | undefined} [passThrough]\n *   List of custom hast node types to pass through (as in, keep) (optional).\n *\n *   If the passed through nodes have children, those children are expected to\n *   be hast again and will be handled.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n *\n * @typedef {{type: 'comment', value: {stitch: Nodes}}} Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && node.tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n  // Always element.\n  /* c8 ignore next */\n  const attrs = 'attrs' in result ? result.attrs : []\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs,\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = node.tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(node.tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tag.tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n"],"names":["Col","React","props","ref","className","colProps","as","Component","bsPrefix","spans","_ref","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","concat","push","classNames","useCol","_jsx","length","displayName","Row","decoratedBsPrefix","sizePrefix","cols","env","self","globalThis","deserialize","serialized","deserializer","$","_","out","index","set","unpair","has","get","type","value","arr","object","key","Date","source","flags","RegExp","map","Map","Set","add","name","message","BigInt","Object","EMPTY","toString","keys","typeOf","asString","call","slice","includes","shouldSkip","TYPE","serialize","json","lossy","arguments","undefined","serializer","strict","pair","entry","TypeError","valueOf","toJSON","entries","toISOString","structuredClone","any","options","search","buttonTypes","own","hasOwnProperty","createH","schema","defaultTagName","caseSensitive","adjust","values","result","toLowerCase","createAdjustMap","selector","properties","node","_len","children","Array","_key","child","unshift","previous","tagName","start","lastIndex","match","exec","subvalue","id","isArray","parseSelector","isProperties","addProperty","addChild","content","info","find","Number","isNaN","spaceSeparated","spaces","commaSeparated","commas","commaOrSpaceSeparated","join","parsePrimitive","property","style","String","finalResult","nodes","Error","number","boolean","overloadedBoolean","normalize","h","html","s","svg","webNamespaces","mathml","xlink","xml","xmlns","proto","prototype","fromParse5","tree","settings","one","file","location","space","verbose","state","nodeName","reference","data","patch","quirksMode","mode","all","childNodes","doc","loc","indices","test","toPoint","line","column","toOffset","point","end","position","namespaceURI","attrs","attribute","prefix","fn","pos","sourceCodeLocation","startTag","endTag","element","results","from","to","createLocation","tail","assign","opening","closing","startLine","startCol","startOffset","endLine","endCol","endOffset","zwitch","invalid","handlers","unknown","parameters","this","emptyOptions","root","parentSchema","currentSchema","prop","createProperty","parentNode","fragment","text","comment","doctype","publicId","systemId","indexOf","namespace","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","ERR","Preprocessor","constructor","handler","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","code","_err","onParseError","_addGap","_processSurrogate","nextCp","charCodeAt","isSurrogatePair","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","substring","write","chunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","pattern","i","peek","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","pop","TokenType","getTokenAttr","token","attrName","Uint16Array","split","c","decodeMap","fromCodePoint","_a","codePoint","output","fromCharCode","replaceCodePoint","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isEntityInAttributeInvalidEnd","EQUALS","UPPER_A","UPPER_Z","LOWER_A","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","str","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","base","digitCount","Math","pow","parseInt","substr","startIdx","char","UPPER_F","LOWER_F","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecodeTree","xmlDecodeTree","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","create","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","NULL","_emitChars","_matchNamedCharacterReference","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","matchResult","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","document","items","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","lastIndexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","replace","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","ns","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createElement","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","parse","parser","getFragmentParser","opts","TN","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","_adoptNodes","beforeToken","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","parent","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","siblings","textNodeIdx","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignContent","_reconstructActiveFormattingElements","listLength","endIndex","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","p","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","unicode","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","shift","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","noembedStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","xmlCodeMap","codePointAt","getEscaper","regex","lastIdx","pointEnd","pointStart","convert","ok","castFactory","tests","checks","apply","anyFactory","check","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","Boolean","looksLikeANode","empty","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","defineProperty","visit","subresult","grandparents","toResult","nodeAsParent","knownMdxNames","parseOptions","raw","head","documentMode","handleRaw","handle","stitches","resetTokenizer","testOrVisitor","visitorOrReverse","maybeReverse","stitch","toParse5","tag","Token","createParse5Location","clone","cloneWithoutChildren","fakeRoot","setPoint","node_","passThrough","extra","rehypeRaw"],"sourceRoot":""}