{"version":3,"file":"static/js/518.2d19dc81.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/create-h.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hastscript/lib/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/zwitch/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/parse5/dist/common/unicode.js","../node_modules/parse5/dist/common/error-codes.js","../node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/parse5/dist/common/token.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","../node_modules/parse5/dist/common/html.js","../node_modules/parse5/dist/tokenizer/index.js","../node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/parse5/dist/tree-adapters/default.js","../node_modules/parse5/dist/common/doctype.js","../node_modules/parse5/dist/common/foreign-content.js","../node_modules/parse5/dist/parser/index.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","../node_modules/parse5/dist/serializer/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/hast-util-raw/node_modules/unist-util-is/lib/index.js","../node_modules/hast-util-raw/node_modules/unist-util-visit-parents/lib/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/hast-util-raw/node_modules/unist-util-visit/lib/index.js","../node_modules/rehype-raw/lib/index.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n *\n *   Returns `undefined` when given out of bounds input.\n *\n *   Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n *   [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {UnistPoint | undefined}\n *   Point, if `offset` is valid and in-bounds input.\n *\n * @callback ToOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n * @param {PointLike | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number | undefined}\n *   Offset (`number`) or `undefined` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n * @property {ToOffset} toOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n */\n\nconst search = /\\r?\\n|\\r/g\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  search.lastIndex = 0\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map",null,null,null,null,"/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map",null,"import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {Array<Nodes['type']> | null | undefined} [passThrough]\n *   List of custom hast node types to pass through (as in, keep) (optional).\n *\n *   If the passed through nodes have children, those children are expected to\n *   be hast again and will be handled.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n *\n * @typedef {{type: 'comment', value: {stitch: Nodes}}} Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && node.tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n  // Always element.\n  /* c8 ignore next */\n  const attrs = 'attrs' in result ? result.attrs : []\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs,\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = node.tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(node.tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tag.tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n"],"names":["_excluded","_excluded2","Col","React","props","ref","_useCol","_ref","as","bsPrefix","className","_objectWithoutProperties","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","concat","push","_objectSpread","classNames","useCol","_useCol2","_slicedToArray","_useCol2$","colProps","_useCol2$2","_useCol2$2$as","Component","_jsx","length","displayName","Row","_ref$as","decoratedBsPrefix","sizePrefix","cols","env","self","globalThis","deserialize","serialized","$","_","out","index","set","unpair","has","get","_$index","type","value","_step","arr","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","_step2","object","_iterator2","_step2$value","key","Date","source","flags","RegExp","_step3","map","Map","_iterator3","_step3$value","_step4","Set","_iterator4","add","name","message","BigInt","Object","deserializer","EMPTY","toString","keys","typeOf","asString","call","slice","includes","shouldSkip","_ref2","_ref3","TYPE","serialize","_ref4","arguments","undefined","json","lossy","strict","pair","_typeOf","_typeOf2","entry","TypeError","_toConsumableArray","valueOf","toJSON","entries","toISOString","serializer","structuredClone","any","options","search","buttonTypes","own","hasOwnProperty","createH","schema","defaultTagName","caseSensitive","adjust","values","result","toLowerCase","createAdjustMap","selector","properties","node","_len","children","Array","_key","child","unshift","previous","tagName","start","lastIndex","match","exec","subvalue","id","isArray","parseSelector","isProperties","addProperty","addChild","content","info","find","Number","isNaN","spaceSeparated","spaces","commaSeparated","commas","commaOrSpaceSeparated","join","parsePrimitive","property","style","String","finalResult","nodes","Error","number","boolean","overloadedBoolean","normalize","h","html","svg","webNamespaces","mathml","xlink","xml","xmlns","proto","prototype","fromParse5","tree","settings","one","file","location","space","verbose","state","nodeName","patch","data","reference","quirksMode","mode","all","childNodes","doc","loc","indices","test","toPoint","line","column","toOffset","point","end","position","namespaceURI","attrs","attribute","prefix","fn","pos","sourceCodeLocation","startTag","endTag","element","results","from","to","tail","assign","opening","closing","createLocation","startLine","startCol","startOffset","endLine","endCol","endOffset","zwitch","invalid","handlers","unknown","_fn","parameters","apply","this","emptyOptions","root","parentSchema","currentSchema","prop","createProperty","parentNode","fragment","text","comment","doctype","publicId","systemId","indexOf","namespace","CODE_POINTS","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","ERR","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","TokenType","Preprocessor","handler","_classCallCheck","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","_createClass","code","col","onParseError","getError","nextCp","charCodeAt","isSurrogatePair","_addGap","EOF","_err","surrogateInInputStream","willDropParsedChunk","substring","chunk","isLastChunk","pattern","startsWith","i","CARRIAGE_RETURN","LINE_FEED","advance","_processSurrogate","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","count","pop","getTokenAttr","token","attrName","CharCodes","Uint16Array","split","c","decodeMap","fromCodePoint","_a","codePoint","output","fromCharCode","replaceCodePoint","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isEntityInAttributeInvalidEnd","EQUALS","UPPER_A","UPPER_Z","LOWER_A","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","str","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","base","digitCount","Math","pow","parseInt","substr","startIdx","char","UPPER_F","LOWER_F","addToNumericResult","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","startEntity","len","write","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecodeTree","xmlDecodeTree","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","_SPECIAL_ELEMENTS","_defineProperty","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","State","C1_CONTROLS_REFERENCE_REPLACEMENTS","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","EntryType","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_consume","_ensureHibernation","_callState","writeCallback","_runParsingLoop","insertHtmlAtCurrentPos","_unconsume","retreat","_advanceBy","START_TAG","tagID","selfClosing","ackSelfClosing","END_TAG","COMMENT","initialName","DOCTYPE","forceQuirks","chars","attrNameFirstCh","create","_leaveAttrValue","duplicateAttribute","ct","_emitCurrentCharacterToken","prepareToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","dropParsedChunk","onComment","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","onEof","ch","_createCharacterToken","NULL","_appendCharToCurrentCharacterToken","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","peek","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_emitCodePoint","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","_emitEOFToken","_emitChars","_createStartTagToken","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","_createCommentToken","eofBeforeTagName","invalidFirstCharacterOfTagName","_createEndTagToken","missingEndTagName","emitCurrentTagToken","eofInTag","_cp","handleSpecialEndTag","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","unexpectedEqualsSignBeforeAttributeName","_createAttr","_leaveAttrName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","emitCurrentComment","_consumeSequenceIfMatch","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","_createDoctypeToken","emitCurrentDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","_flushCodePointConsumedAsCharacterReference","_reconsumeInState","matchResult","_matchNamedCharacterReference","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","document","treeAdapter","items","tagIDs","stackTop","tmplCount","currentTagId","_isInTemplate","getTemplateContent","lastIndexOf","getNamespaceURI","onItemPush","popped","_updateCurrentElement","onItemPop","oldElement","newElement","idx","_indexOf","referenceElement","newElementID","insertionIdx","splice","targetIdx","shortenToLength","tagNames","targetNS","_indexOfTagNames","popUntilPopped","clearBackTo","elementIdx","ns","exclusionId","MARKER","Marker","FormattingElementList","bookmark","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_getNoahArkConditionCandidates","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","_ensureNoahArkCondition","Element","bookmarkIdx","entryIndex","markerIdx","_this","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createElement","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","InsertionMode","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","rootElement","_adoptNodes","beforeToken","tid","isTop","_setEndLocation","_this$openElements","isHTML","_isIntegrationPoint","nextTokenizerState","_insertElement","TEXT","IN_BODY","TN","docTypeNode","_shouldFosterParentOnInsertion","_fosterParentElement","parent","currentTmplContentOrNode","_attachElementToTree","tmpl","beforeElement","_this$_findFosterPare","_findFosterParentingLocation","siblings","textNodeIdx","_token$location","donor","closingToken","ctLoc","endLoc","_this$openElements2","_processStartTag","foreignContent","_this2","listLength","endIndex","findIndex","contains","generateImpliedEndTags","popUntilTableCellPopped","clearToLastMarker","IN_ROW","generateImpliedEndTagsWithExclusion","popUntilTagNamePopped","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","p","_insertCharacters","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","IN_TEMPLATE","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","unicode","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","_appendCommentNode","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","_setDocumentType","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","shouldProcessStartTagTokenInForeignContent","startTagToken","isFontWithAttrs","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","_getAdjustedCurrentElement","currentNs","adjustedTagName","_appendElement","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","remove","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","hasInTableScope","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","_closeTableCell","startTagInCell","startTagInSelect","_resetInsertionMode","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","isRootHtmlElementCurrent","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","parser","opts","documentMock","_initTokenizerForFragmentParsing","_insertFakeRootElement","_findFormInFragmentContext","aaObtainFormattingElementEntry","formattingElementEntry","getElementEntryInScopeWithTagName","hasInScope","removeEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","_isSpecialElement","aaInnerLoop","formattingElement","lastElement","nextElement","getCommonAncestor","elementEntry","getElementEntry","counterOverflow","aaRecreateElementFromEntry","replace","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","insertElementAfterBookmark","insertAfter","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","_processToken","_insertFakeElement","_switchToTextParsing","_insertTemplate","insertMarker","generateImpliedEndTagsThoroughly","closingOfElementWithOpenChildElements","shift","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","_reconstructActiveFormattingElements","areaStartTagInBody","isHiddenInput","inputType","noembedStartTagInBody","genericStartTagInBody","pushElement","bStartTagInBody","activeElementEntry","aStartTagInBody","hasInButtonScope","_closePElement","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","tryPeekProperlyNestedBodyElement","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","popAllUpToHtmlElement","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","hasInListItemScope","liEndTagInBody","ddEndTagInBody","hasNumberedHeaderInScope","popUntilNumberedHeaderPopped","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","clearBackToTableContext","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","clearBackToTableBodyContext","hasTableBodyContextInTableScope","clearBackToTableRowContext","hasInSelectScope","xmlCodeMap","codePointAt","getEscaper","regex","lastIdx","pointEnd","pointStart","convert","ok","castFactory","anyFactory","check","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","tests","checks","testFunction","Boolean","looksLikeANode","empty","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","defineProperty","visit","subresult","grandparents","toResult","nodeAsParent","knownMdxNames","parseOptions","raw","head","documentMode","handleRaw","getFragmentParser","handle","stitches","resetTokenizer","getFragment","testOrVisitor","visitorOrReverse","maybeReverse","stitch","toParse5","tag","Token","createParse5Location","clone","cloneWithoutChildren","fakeRoot","setPoint","node_","passThrough","extra","rehypeRaw"],"sourceRoot":""}